# -*- coding: utf-8 -*-
"""project-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1889Km9ikESdxFOWAMEijfZl3KSA1XDng
"""

import json

# Load existing data or create an empty data structure
def load_data():
    try:
        with open('finance_data.json', 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return {"income": [], "expenses": [], "budgets": {}, "savings_goal": {}}

# Save the data to a file
def save_data(data):
    with open('finance_data.json', 'w') as file:
        json.dump(data, file, indent=4)

def add_income(data, source, amount, date):
    data["income"].append({"source": source, "amount": amount, "date": date})
    save_data(data)

def add_expense(data, category, amount, date):
    data["expenses"].append({"category": category, "amount": amount, "date": date})
    save_data(data)

def get_financial_summary(data):
    total_income = sum(item["amount"] for item in data["income"])
    total_expenses = sum(item["amount"] for item in data["expenses"])
    net_savings = total_income - total_expenses

    category_expenses = {}
    for expense in data["expenses"]:
        category_expenses[expense["category"]] = category_expenses.get(expense["category"], 0) + expense["amount"]

    category_percentages = {category: (amount / total_expenses) * 100 for category, amount in category_expenses.items()}

    return total_income, total_expenses, net_savings, category_percentages

def set_budget(data, category, budget):
    data["budgets"][category] = budget
    save_data(data)

def check_budget_exceedance(data):
    category_expenses = {}
    for expense in data["expenses"]:
        category_expenses[expense["category"]] = category_expenses.get(expense["category"], 0) + expense["amount"]

    for category, expense in category_expenses.items():
        if category in data["budgets"] and expense > data["budgets"][category]:
            print(f"Budget exceeded in {category}: {expense} > {data['budgets'][category]}")
def set_savings_goal(data, goal_amount, current_savings, deadline):
    data["savings_goal"] = {"goal_amount": goal_amount, "current_savings": current_savings, "deadline": deadline}
    save_data(data)

def track_savings_progress(data):
    current_savings = data["savings_goal"]["current_savings"]
    goal_amount = data["savings_goal"]["goal_amount"]
    progress = (current_savings / goal_amount) * 100
    return current_savings, progress


import matplotlib.pyplot as plt

def plot_expenses_by_category(data):
    categories = list(data["budgets"].keys())
    expenses = [sum(expense["amount"] for expense in data["expenses"] if expense["category"] == category) for category in categories]
    plt.pie(expenses, labels=categories, autopct='%1.1f%%')
    plt.show()

def print_menu():
    print("1. Add Income")
    print("2. Add Expense")
    print("3. View Financial Summary")
    print("4. Set Budget")
    print("5. Set Savings Goal")
    print("6. Exit")

def main():
    data = load_data()

    while True:
        print_menu()
        choice = input("Choose an option: ")

        if choice == "1":
            source = input("Enter income source: ")
            amount = float(input("Enter amount: "))
            date = input("Enter date (YYYY-MM-DD): ")
            add_income(data, source, amount, date)

        elif choice == "2":
            category = input("Enter expense category: ")
            amount = float(input("Enter amount: "))
            date = input("Enter date (YYYY-MM-DD): ")
            add_expense(data, category, amount, date)

        elif choice == "3":
            total_income, total_expenses, net_savings, category_percentages = get_financial_summary(data)
            print(f"Total Income: {total_income}")
            print(f"Total Expenses: {total_expenses}")
            print(f"Net Savings: {net_savings}")
            for category, percentage in category_percentages.items():
                print(f"{category}: {percentage:.2f}%")

        elif choice == "4":
            category = input("Enter category: ")
            budget = float(input("Enter budget: "))
            set_budget(data, category, budget)

        elif choice == "5":
            goal_amount = float(input("Enter savings goal amount: "))
            current_savings = float(input("Enter current savings: "))
            deadline = input("Enter savings goal deadline: ")
            set_savings_goal(data, goal_amount, current_savings, deadline)

        elif choice == "6":
            print("Goodbye!")
            break

if __name__ == "__main__":
    main()